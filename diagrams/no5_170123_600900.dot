digraph "src" {

splines  = ortho;
fontname = "Inconsolata";

node [colorscheme = ylgnbu4];
edge [colorscheme = dark28, dir = both];

AddCommand                         [shape = record, pos = "38.342,14.354!"   , label = "{ AddCommand | + AddCommand() : \l + AddCommand(ModuleHandler\<Route\>) : \l|+ execute(String[]) : void\l| name : String\l  args : String\l  descr : String\l }"];
AddIfMaxCommand                    [shape = record, pos = "28.620,14.354!"   , label = "{ AddIfMaxCommand | + AddIfMaxCommand() : \l + AddIfMaxCommand(ModuleHandler\<Route\>) : \l|+ execute(String[]) : void\l| name : String\l  args : String\l  descr : String\l }"];
AddIfMinCommand                    [shape = record, pos = "33.509,14.354!"   , label = "{ AddIfMinCommand | + AddIfMinCommand() : \l + AddIfMinCommand(ModuleHandler\<Route\>) : \l|+ execute(String[]) : void\l| name : String\l  args : String\l  descr : String\l }"];
BaseCommand                        [shape = record, pos = "76.690,19.736!"   , label = "{ \<\<interface\>\>\nBaseCommand | + execute(String[]) : void\l| name : String\l  args : String\l  descr : String\l }"];
BaseReader                         [shape = record, pos = "47.204,33.979!"   , label = "{ \<\<interface\>\>\nBaseReader | + readFromFile(String) : LinkedHashMap\<String[], String\>\l }"];
BaseWriter                         [shape = record, pos = "92.827,33.979!"   , label = "{ \<\<interface\>\>\nBaseWriter | + writeToFile(String, LinkedHashMap\<String[], String\>) : void\l }"];
ClearCommand                       [shape = record, pos = "80.262,14.021!"   , label = "{ ClearCommand | + ClearCommand() : \l|+ execute(String[]) : void\l| name : String\l  descr : String\l }"];
"CollectionHandler<T, E>"          [shape = record, pos = "14.130,20.403!"   , label = "{ \<\<interface\>\>\nCollectionHandler\<T, E\> | + validateElements() : void\l + sort() : void\l + clearCollection() : void\l + addElementToCollection(E) : void\l| lastElement : E\l  firstOrNew : E\l  collection : T\l  initDate : Date\l }"];
CommandExecutor                    [shape = record, pos = "40.741,19.403!"   , label = "{ CommandExecutor | + CommandExecutor() : \l|+ startExecuting(InputStream, CommandMode) : void\l }"];
CommandManager                     [shape = record, pos = "57.589,10.125!"   , label = "{ CommandManager | + CommandManager() : \l + CommandManager(CommandMode, Scanner) : \l|~ commands : LinkedHashMap\<String, BaseCommand\>\l|+ executeCommand(String[]) : void\l| commands : LinkedHashMap\<String, BaseCommand\>\l }"];
CommandMode                        [shape = record, pos = "4.250,4.486!"     , label = "{ \<\<enumeration\>\>\nCommandMode | + CommandMode() : \l|+ valueOf(String) : CommandMode\l + values() : CommandMode[]\l }"];
CoordXValidator                    [shape = record, pos = "9.028,34.167!"    , label = "{ CoordXValidator | + CoordXValidator() : \l|+ validate(Double) : boolean\l }"];
CoordYValidator                    [shape = record, pos = "3.112,34.167!"    , label = "{ CoordYValidator | + CoordYValidator() : \l|+ validate(Float) : boolean\l }"];
Coordinates                        [shape = record, pos = "-0.596,35.208!"   , label = "{ Coordinates | + Coordinates() : \l|- x : double\l - y : Float\l|+ equals(Object) : boolean\l + toString() : String\l + hashCode() : int\l| x : double\l  y : Float\l }"];
CoordinatesCLIHandler              [shape = record, pos = "14.589,26.750!"   , label = "{ CoordinatesCLIHandler | + CoordinatesCLIHandler() : \l|+ buildObject() : Coordinates\l }"];
CountGreaterThanDistanceCommand    [shape = record, pos = "56.776,14.188!"   , label = "{ CountGreaterThanDistanceCommand | + CountGreaterThanDistanceCommand() : \l|+ execute(String[]) : void\l| name : String\l  args : String\l  descr : String\l }"];
DateEditor                         [shape = record, pos = "-2.431,4.486!"    , label = "{ DateEditor | + DateEditor() : \l|+ removePropertyChangeListener(PropertyChangeListener) : void\l + addPropertyChangeListener(PropertyChangeListener) : void\l + supportsCustomEditor() : boolean\l + paintValue(Graphics, Rectangle) : void\l| asText : String\l  customEditor : Component\l  paintable : boolean\l  javaInitializationString : String\l  value : Object\l  tags : String[]\l }"];
DistanceValidator                  [shape = record, pos = "18.089,26.750!"   , label = "{ DistanceValidator | + DistanceValidator() : \l|+ validate(Integer) : boolean\l }"];
ExecuteScriptCommand               [shape = record, pos = "51.582,14.354!"   , label = "{ ExecuteScriptCommand | + ExecuteScriptCommand() : \l|- checkRecursion(String, ArrayList\<Path\>) : boolean\l + execute(String[]) : void\l| name : String\l  args : String\l  descr : String\l }"];
ExitCommand                        [shape = record, pos = "87.304,14.021!"   , label = "{ ExitCommand | + ExitCommand() : \l|+ execute(String[]) : void\l| name : String\l  descr : String\l }"];
HelpCommand                        [shape = record, pos = "75.115,7.069!"    , label = "{ HelpCommand | + HelpCommand() : \l|+ execute(String[]) : void\l| name : String\l  descr : String\l }"];
IdValidator                        [shape = record, pos = "77.037,34.167!"   , label = "{ IdValidator | + IdValidator() : \l|+ validate(Long) : boolean\l }"];
InfoCommand                        [shape = record, pos = "66.943,14.021!"   , label = "{ InfoCommand | + InfoCommand() : \l|+ execute(String[]) : void\l| name : String\l  descr : String\l }"];
"Loader<T, E>"                     [shape = record, pos = "47.176,20.903!"   , label = "{ Loader\<T, E\> | + Loader(Class\<T\>, Class\<E\>) : \l|- convert(Class\<?\>, String) : Object\l + loadFromXMLbyEnvKey(String) : T\l + loadFromFile(String, BaseReader) : T\l - addFieldToElement(String[], String) : void\l - setField(Class\<?\>, String[], int, String, U) : void\l - setupConverter() : void\l - fillCollection(LinkedHashMap\<String[], String\>) : void\l + setupConverter(Class\<?\>, Class\<PropertyEditor\>) : void\l - addObjectToCollection(E) : void\l - buildElement() : E\l }"];
Location                           [shape = record, pos = "6.056,35.875!"    , label = "{ Location | + Location() : \l|- z : Long\l - y : Long\l - name : String\l - x : float\l|+ toString() : String\l + equals(Object) : boolean\l + hashCode() : int\l| name : String\l  x : float\l  z : Long\l  y : Long\l }"];
LocationCLIHandler                 [shape = record, pos = "21.237,26.750!"   , label = "{ LocationCLIHandler | + LocationCLIHandler() : \l|+ buildObject() : Location\l }"];
LocationNameValidator              [shape = record, pos = "73.537,34.167!"   , label = "{ LocationNameValidator | + LocationNameValidator() : \l|+ validate(String) : boolean\l }"];
LocationYZValidator                [shape = record, pos = "14.738,34.167!"   , label = "{ LocationYZValidator | + LocationYZValidator() : \l|+ validate(Long) : boolean\l }"];
Main                               [shape = record, pos = "48.998,13.667!"   , label = "{ Main | + Main() : \l|+ main(String[]) : void\l }"];
MinByCreationDateCommand           [shape = record, pos = "72.665,14.021!"   , label = "{ MinByCreationDateCommand | + MinByCreationDateCommand() : \l|+ execute(String[]) : void\l| name : String\l  descr : String\l }"];
"ModuleHandler<T>"                 [shape = record, pos = "26.875,33.979!"   , label = "{ \<\<interface\>\>\nModuleHandler\<T\> | + buildObject() : T\l }"];
NameValidator                      [shape = record, pos = "11.513,26.750!"   , label = "{ NameValidator | + NameValidator() : \l|+ validate(String) : boolean\l }"];
PrintFieldDistanceAscendingCommand [shape = record, pos = "61.790,14.021!"   , label = "{ PrintFieldDistanceAscendingCommand | + PrintFieldDistanceAscendingCommand() : \l|+ execute(String[]) : void\l| name : String\l  descr : String\l }"];
RemoveByIdCommand                  [shape = record, pos = "76.832,14.188!"   , label = "{ RemoveByIdCommand | + RemoveByIdCommand() : \l|+ execute(String[]) : void\l| name : String\l  args : String\l  descr : String\l }"];
RemoveGreaterCommand               [shape = record, pos = "43.595,14.354!"   , label = "{ RemoveGreaterCommand | + RemoveGreaterCommand() : \l + RemoveGreaterCommand(ModuleHandler\<Route\>) : \l|+ execute(String[]) : void\l| name : String\l  args : String\l  descr : String\l }"];
Route                              [shape = record, pos = "3.326,29.625!"    , label = "{ Route | + Route() : \l|- to : Location\l - coordinates : Coordinates\l - creationDate : Date\l - from : Location\l - id : Long\l - name : String\l - distance : int\l|+ equals(Object) : boolean\l + compareTo(Route) : int\l + hashCode() : int\l + toString() : String\l| name : String\l  coordinates : Coordinates\l  to : Location\l  distance : int\l  id : Long\l  from : Location\l  creationDate : Date\l }"];
RouteCLIHandler                    [shape = record, pos = "22.310,19.403!"   , label = "{ RouteCLIHandler | + RouteCLIHandler() : \l|+ buildObject() : Route\l }"];
RouteComparator                    [shape = record, pos = "10.908,19.403!"   , label = "{ RouteComparator | + RouteComparator() : \l|+ compare(Route, Route) : int\l }"];
RouteHandlers                      [shape = record, pos = "77.218,26.750!"   , label = "{ RouteHandlers | + RouteHandlers() : \l|+ generateID() : Long\l }"];
RouteHashComparator                [shape = record, pos = "31.956,19.403!"   , label = "{ RouteHashComparator | + RouteHashComparator() : \l|+ compare(Route, Route) : int\l }"];
RouteNonCLIHandler                 [shape = record, pos = "1.456,13.833!"    , label = "{ RouteNonCLIHandler | + RouteNonCLIHandler(Scanner) : \l|+ buildObject() : Route\l - generateLocation(int, ArrayList\<String\>) : Location\l }"];
RouteValidator                     [shape = record, pos = "1.800,19.403!"    , label = "{ RouteValidator | + RouteValidator() : \l|+ validate(Route) : boolean\l }"];
RoutesHandler                      [shape = record, pos = "6.664,15.208!"    , label = "{ RoutesHandler | - RoutesHandler() : \l|- initDate : Date\l|+ validateElements() : void\l + addElementToCollection(Route) : void\l + clearCollection() : void\l + sort() : void\l| firstOrNew : Route\l  instance : RoutesHandler\l  collection : HashSet\<Route\>\l  initDate : Date\l  lastElement : Route\l }"];
SaveCommand                        [shape = record, pos = "90.165,14.021!"   , label = "{ SaveCommand | + SaveCommand() : \l|+ execute(String[]) : void\l| name : String\l  descr : String\l }"];
"Saver<T, E>"                      [shape = record, pos = "92.994,19.903!"   , label = "{ Saver\<T, E\> | + Saver(Class\<E\>) : \l|+ saveCollection(T, String) : void\l - convert(Class\<?\>, Object) : String\l - addToCollection(Object, Field, ArrayList\<String\>) : void\l - getValues(T) : LinkedHashMap\<String[], String\>\l }"];
ShowCommand                        [shape = record, pos = "69.804,14.021!"   , label = "{ ShowCommand | + ShowCommand() : \l|+ execute(String[]) : void\l| name : String\l  descr : String\l }"];
UnknownCommandException            [shape = record, pos = "83.123,13.479!"   , label = "{ UnknownCommandException | + UnknownCommandException(String) : \l }"];
UpdateCommand                      [shape = record, pos = "23.925,14.354!"   , label = "{ UpdateCommand | + UpdateCommand() : \l + UpdateCommand(ModuleHandler\<Route\>) : \l|+ execute(String[]) : void\l| name : String\l  args : String\l  descr : String\l }"];
"Validator<T>"                     [shape = record, pos = "12.266,37.472!"   , label = "{ \<\<interface\>\>\nValidator\<T\> | + validate(T) : boolean\l }"];
Wrapper                            [shape = record, pos = "94.405,14.042!"   , label = "{ Wrapper | + Wrapper() : \l|- WRAPPER_TYPES : Set\<Class\<?\>\>\l|+ isWrapperType(Class\<?\>) : boolean\l| WRAPPER_TYPES : Set\<Class\<?\>\>\l }"];
XMLReader                          [shape = record, pos = "47.204,27.083!"   , label = "{ XMLReader | + XMLReader() : \l|+ readFromFile(String) : LinkedHashMap\<String[], String\>\l - handleCurrentKeyAndValue() : void\l - pushValue(String[]) : void\l }"];
XMLWriter                          [shape = record, pos = "92.397,27.083!"   , label = "{ XMLWriter | + XMLWriter() : \l|- writeElement(PrintWriter, String[], String[], String) : void\l - getNextAddress(LinkedHashMap\<String[], String\>, String[]) : String[]\l + writeToFile(String, LinkedHashMap\<String[], String\>) : void\l }"];

AddCommand                         -> BaseCommand                        [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
AddCommand                         -> "ModuleHandler<T>"                 [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "handler\n1"];
AddCommand                         -> RouteCLIHandler                    [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
AddIfMaxCommand                    -> BaseCommand                        [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
AddIfMaxCommand                    -> "ModuleHandler<T>"                 [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "handler\n1"];
AddIfMaxCommand                    -> RouteCLIHandler                    [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
AddIfMinCommand                    -> BaseCommand                        [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
AddIfMinCommand                    -> "ModuleHandler<T>"                 [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "handler\n1"];
AddIfMinCommand                    -> RouteCLIHandler                    [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
ClearCommand                       -> BaseCommand                        [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
CommandExecutor                    -> CommandManager                     [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
CommandManager                     -> AddCommand                         [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
CommandManager                     -> AddIfMaxCommand                    [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
CommandManager                     -> AddIfMinCommand                    [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
CommandManager                     -> BaseCommand                        [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "commands\n*"];
CommandManager                     -> ClearCommand                       [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
CommandManager                     -> CountGreaterThanDistanceCommand    [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
CommandManager                     -> ExecuteScriptCommand               [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
CommandManager                     -> ExitCommand                        [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
CommandManager                     -> HelpCommand                        [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
CommandManager                     -> InfoCommand                        [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
CommandManager                     -> MinByCreationDateCommand           [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
CommandManager                     -> PrintFieldDistanceAscendingCommand [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
CommandManager                     -> RemoveByIdCommand                  [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
CommandManager                     -> RemoveGreaterCommand               [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
CommandManager                     -> RouteCLIHandler                    [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
CommandManager                     -> RouteNonCLIHandler                 [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
CommandManager                     -> SaveCommand                        [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
CommandManager                     -> ShowCommand                        [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
CommandManager                     -> UnknownCommandException            [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
CommandManager                     -> UpdateCommand                      [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
CoordXValidator                    -> "Validator<T>"                     [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
CoordYValidator                    -> "Validator<T>"                     [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
CoordinatesCLIHandler              -> CoordXValidator                    [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
CoordinatesCLIHandler              -> CoordYValidator                    [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
CoordinatesCLIHandler              -> Coordinates                        [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
CoordinatesCLIHandler              -> "ModuleHandler<T>"                 [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
CountGreaterThanDistanceCommand    -> BaseCommand                        [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
DistanceValidator                  -> "Validator<T>"                     [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
ExecuteScriptCommand               -> BaseCommand                        [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
ExecuteScriptCommand               -> CommandExecutor                    [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
ExitCommand                        -> BaseCommand                        [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
HelpCommand                        -> BaseCommand                        [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
HelpCommand                        -> CommandManager                     [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
IdValidator                        -> "Validator<T>"                     [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
InfoCommand                        -> BaseCommand                        [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
"Loader<T, E>"                     -> XMLReader                          [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
LocationCLIHandler                 -> Location                           [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
LocationCLIHandler                 -> LocationNameValidator              [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
LocationCLIHandler                 -> LocationYZValidator                [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
LocationCLIHandler                 -> "ModuleHandler<T>"                 [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
LocationNameValidator              -> "Validator<T>"                     [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
LocationYZValidator                -> "Validator<T>"                     [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
Main                               -> CommandExecutor                    [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
Main                               -> "Loader<T, E>"                     [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
MinByCreationDateCommand           -> BaseCommand                        [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
NameValidator                      -> "Validator<T>"                     [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
PrintFieldDistanceAscendingCommand -> BaseCommand                        [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
RemoveByIdCommand                  -> BaseCommand                        [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
RemoveGreaterCommand               -> BaseCommand                        [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
RemoveGreaterCommand               -> "ModuleHandler<T>"                 [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "handler\n1"];
RemoveGreaterCommand               -> RouteCLIHandler                    [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
RemoveGreaterCommand               -> RouteHashComparator                [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
Route                              -> Coordinates                        [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "coordinates\n1"];
Route                              -> Location                           [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "from\n1"];
RouteCLIHandler                    -> CoordinatesCLIHandler              [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
RouteCLIHandler                    -> DistanceValidator                  [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
RouteCLIHandler                    -> LocationCLIHandler                 [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
RouteCLIHandler                    -> "ModuleHandler<T>"                 [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
RouteCLIHandler                    -> NameValidator                      [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
RouteCLIHandler                    -> Route                              [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
RouteHandlers                      -> IdValidator                        [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
RouteNonCLIHandler                 -> Coordinates                        [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
RouteNonCLIHandler                 -> Location                           [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
RouteNonCLIHandler                 -> "ModuleHandler<T>"                 [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
RouteNonCLIHandler                 -> Route                              [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
RouteNonCLIHandler                 -> RouteValidator                     [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
RouteValidator                     -> CoordXValidator                    [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
RouteValidator                     -> CoordYValidator                    [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
RouteValidator                     -> DistanceValidator                  [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
RouteValidator                     -> LocationNameValidator              [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
RouteValidator                     -> LocationYZValidator                [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
RouteValidator                     -> NameValidator                      [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
RouteValidator                     -> "Validator<T>"                     [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
RoutesHandler                      -> "CollectionHandler<T, E>"          [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
RoutesHandler                      -> Route                              [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
RoutesHandler                      -> Route                              [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "routes\n*"];
RoutesHandler                      -> RouteComparator                    [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
RoutesHandler                      -> RouteValidator                     [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
SaveCommand                        -> BaseCommand                        [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
SaveCommand                        -> "Saver<T, E>"                      [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
"Saver<T, E>"                      -> XMLWriter                          [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
ShowCommand                        -> BaseCommand                        [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
UpdateCommand                      -> BaseCommand                        [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
UpdateCommand                      -> CommandManager                     [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
UpdateCommand                      -> "ModuleHandler<T>"                 [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "handler\n1"];
UpdateCommand                      -> RouteCLIHandler                    [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
Wrapper                            -> "Saver<T, E>"                      [color = "#820000", style = solid , arrowtail = odot    , arrowhead = none    , taillabel = "", label = "", headlabel = ""];
XMLReader                          -> BaseReader                         [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
XMLWriter                          -> BaseWriter                         [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];

}
